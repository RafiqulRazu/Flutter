// import 'package:flutter/material.dart';
// import 'package:test_flutter/service/LeadService.dart';
// import 'package:test_flutter/model/Lead.dart';
// import 'package:test_flutter/model/Activity.dart';
// import 'package:test_flutter/model/User.dart';
//
// class CreateLeadPage extends StatefulWidget {
//   const CreateLeadPage({Key? key}) : super(key: key);
//
//   @override
//   _CreateLeadPageState createState() => _CreateLeadPageState();
// }
//
// class _CreateLeadPageState extends State<CreateLeadPage> {
//   final _formKey = GlobalKey<FormState>();
//   final LeadService _leadService = LeadService();
//
//   // Controllers for user input
//   final TextEditingController _activityIdController = TextEditingController();
//   final TextEditingController _salesExecutiveIdController = TextEditingController();
//   final TextEditingController _createdAtController = TextEditingController();
//
//   bool _isLoading = false;
//
//   // Method to create a lead
//   Future<void> _createLead() async {
//     if (_formKey.currentState!.validate()) {
//       setState(() {
//         _isLoading = true;
//       });
//
//       try {
//         // Parse input
//         int activityId = int.parse(_activityIdController.text);
//         int salesExecutiveId = int.parse(_salesExecutiveIdController.text);
//         DateTime createdAt = DateTime.parse(_createdAtController.text);
//
//         // Create associated objects
//         Activity activity = Activity(id: activityId, name: "Sample Activity"); // Replace with actual data
//         User salesExecutive = User(id: salesExecutiveId, name: "Sample User"); // Replace with actual data
//
//         // Create a Lead object
//         Lead newLead = Lead(
//           id: 0, // ID will be generated by the backend
//           activity: activity,
//           salesExecutive: salesExecutive,
//           createdAt: createdAt,
//         );
//
//         // Call the LeadService to create the lead
//         await _leadService.createLead(newLead);
//
//         // Show success message
//         ScaffoldMessenger.of(context).showSnackBar(
//           const SnackBar(content: Text('Lead created successfully!')),
//         );
//
//         // Clear the form
//         _formKey.currentState!.reset();
//         _activityIdController.clear();
//         _salesExecutiveIdController.clear();
//         _createdAtController.clear();
//       } catch (e) {
//         // Show error message
//         ScaffoldMessenger.of(context).showSnackBar(
//           SnackBar(content: Text('Failed to create lead: $e')),
//         );
//       } finally {
//         setState(() {
//           _isLoading = false;
//         });
//       }
//     }
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         title: const Text('Create Lead'),
//       ),
//       body: Padding(
//         padding: const EdgeInsets.all(16.0),
//         child: Form(
//           key: _formKey,
//           child: ListView(
//             children: [
//               TextFormField(
//                 controller: _activityIdController,
//                 keyboardType: TextInputType.number,
//                 decoration: const InputDecoration(
//                   labelText: 'Activity ID',
//                   border: OutlineInputBorder(),
//                 ),
//                 validator: (value) {
//                   if (value == null || value.isEmpty) {
//                     return 'Please enter Activity ID';
//                   }
//                   if (int.tryParse(value) == null) {
//                     return 'Activity ID must be a valid number';
//                   }
//                   return null;
//                 },
//               ),
//               const SizedBox(height: 16.0),
//               TextFormField(
//                 controller: _salesExecutiveIdController,
//                 keyboardType: TextInputType.number,
//                 decoration: const InputDecoration(
//                   labelText: 'Sales Executive ID',
//                   border: OutlineInputBorder(),
//                 ),
//                 validator: (value) {
//                   if (value == null || value.isEmpty) {
//                     return 'Please enter Sales Executive ID';
//                   }
//                   if (int.tryParse(value) == null) {
//                     return 'Sales Executive ID must be a valid number';
//                   }
//                   return null;
//                 },
//               ),
//               const SizedBox(height: 16.0),
//               TextFormField(
//                 controller: _createdAtController,
//                 keyboardType: TextInputType.datetime,
//                 decoration: const InputDecoration(
//                   labelText: 'Created At (YYYY-MM-DD)',
//                   border: OutlineInputBorder(),
//                 ),
//                 validator: (value) {
//                   if (value == null || value.isEmpty) {
//                     return 'Please enter Created At date';
//                   }
//                   try {
//                     DateTime.parse(value); // Validates date format
//                   } catch (_) {
//                     return 'Invalid date format. Use YYYY-MM-DD';
//                   }
//                   return null;
//                 },
//               ),
//               const SizedBox(height: 16.0),
//               _isLoading
//                   ? const Center(child: CircularProgressIndicator())
//                   : ElevatedButton(
//                 onPressed: _createLead,
//                 child: const Text('Create Lead'),
//               ),
//             ],
//           ),
//         ),
//       ),
//     );
//   }
// }
//
//
